// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: query.sql

package querytest

import (
	"context"
)

const mixedNotation = `-- name: MixedNotation :one
SELECT concat_lower_or_upper('Hello', 'World', uppercase => true)
`

func (q *Queries) MixedNotation(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, mixedNotation)
	var concat_lower_or_upper string
	err := row.Scan(&concat_lower_or_upper)
	return concat_lower_or_upper, err
}

const namedAnyOrder = `-- name: NamedAnyOrder :one
SELECT concat_lower_or_upper(a => 'Hello', b => 'World', uppercase => true)
`

func (q *Queries) NamedAnyOrder(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, namedAnyOrder)
	var concat_lower_or_upper string
	err := row.Scan(&concat_lower_or_upper)
	return concat_lower_or_upper, err
}

const namedNotation = `-- name: NamedNotation :one
SELECT concat_lower_or_upper(a => 'Hello', b => 'World')
`

func (q *Queries) NamedNotation(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, namedNotation)
	var concat_lower_or_upper string
	err := row.Scan(&concat_lower_or_upper)
	return concat_lower_or_upp