
// Code generated by sqlc-pg-gen. DO NOT EDIT.

package postgresql

import (
	"github.com/kyleconroy/sqlc/internal/sql/ast"
	"github.com/kyleconroy/sqlc/internal/sql/catalog"
)

var funcsgenPGCatalog = []*catalog.Function{
	{
		Name:       "RI_FKey_cascade_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_cascade_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_check_ins",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_check_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_noaction_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_noaction_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_restrict_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_restrict_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setdefault_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setdefault_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setnull_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setnull_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name: "abbrev",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cidr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "abbrev",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "aclcontains",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "acldefault",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem[]"},
	},
	{
		Name: "aclexplode",
		Args: []*catalog.Argument{
			{
				Name: "acl",
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "aclinsert",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem[]"},
	},
	{
		Name: "aclitemeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "aclitemin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem"},
	},
	{
		Name: "aclitemout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "aclremove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem[]"},
	},
	{
		Name: "acos",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "acosd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "acosh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "xid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "amvalidate",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "any_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "any"},
	},
	{
		Name: "any_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyarray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "anyarray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyarray_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "anycompatible_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatible"},
	},
	{
		Name: "anycompatible_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblearray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "anycompatiblearray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblearray_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "anycompatiblemultirange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblemultirange"},
	},
	{
		Name: "anycompatiblemultirange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblemultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblenonarray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblenonarray"},
	},
	{
		Name: "anycompatiblenonarray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblenonarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblerange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblerange"},
	},
	{
		Name: "anycompatiblerange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblerange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyelement_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "anyelement_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyenum_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "anyenum_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anymultirange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "anymultirange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anynonarray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anynonarray"},
	},
	{
		Name: "anynonarray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anynonarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyrange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyrange"},
	},
	{
		Name: "anyrange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anytextcat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anynonarray"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "area",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "area",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "area",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "array_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anynonarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_append",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_cat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_dims",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "array_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_fill",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_fill",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_lower",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_ndims",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "array_position",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_position",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_positions",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer[]"},
	},
	{
		Name: "array_prepend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_remove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_replace",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "array_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_to_json",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "array_to_json",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "array_to_string",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "array_to_string",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "array_to_tsvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tsvector"},
	},
	{
		Name: "array_upper",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "arraycontained",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "arraycontains",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "arrayoverlap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ascii",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "asin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "asind",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "asinh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atan",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atan2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atan2d",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atand",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atanh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "binary_upgrade_create_empty_extension",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "oid[]"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_missing_value",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_array_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_heap_pg_class_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_heap_relfilenode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_index_pg_class_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_index_relfilenode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_multirange_array_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_multirange_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_authid_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_enum_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_tablespace_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_toast_pg_class_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_toast_relfilenode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_record_init_privs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "bit_count",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_count",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "bit_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "bit_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "bitand",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitcat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit varying"},
			},
			{
				Type: &ast.TypeName{Name: "bit varying"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit varying"},
	},
	{
		Name: "bitcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "biteq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitgt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitnot",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitshiftleft",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitshiftright",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bittypmodin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bittypmodout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "bitxor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bool",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bool",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bool_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bool_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "booland_statefunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "booleq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolgt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boollt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolor_statefunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "boolsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "bound_box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_above",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_above_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_add",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_below",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_below_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "box_contain",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_contain_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_contained",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_distance",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "box_div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_intersect",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_left",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "box_overabove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overbelow",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overlap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overleft",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overright",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_right",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_same",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "box_sub",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "bpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar_pattern_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_pattern_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_pattern_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_pattern_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpcharcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bpchareq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchargt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchariclike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharicnlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharicregexeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharicregexne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpcharle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharnlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "bpcharregexeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharregexne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "bpchartypmodin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bpchartypmodout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "brin_bloom_summary_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_brin_bloom_summary"},
	},
	{
		Name: "brin_bloom_summary_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_bloom_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "brin_bloom_summary_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_bloom_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "brin_desummarize_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "brin_minmax_multi_summary_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_brin_minmax_multi_summary"},
	},
	{
		Name: "brin_minmax_multi_summary_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_minmax_multi_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "brin_minmax_multi_summary_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_minmax_multi_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "brin_summarize_new_values",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "brin_summarize_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "broadcast",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "btarraycmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btboolcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btbpchar_pattern_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btcharcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btequalimage",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "btfloat48cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btfloat4cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btfloat84cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btfloat8cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint24cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint28cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint2cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint42cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint48cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint4cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint82cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint84cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint8cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btnamecmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btnametextcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btoidcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btoidvectorcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btrecordcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "record"},
			},
			{
				Type: &ast.TypeName{Name: "record"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btrecordimagecmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "record"},
			},
			{
				Type: &ast.TypeName{Name: "record"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "btrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "btrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "bttext_pattern_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bttextcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bttextnamecmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bttidcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tid"},
			},
			{
				Type: &ast.TypeName{Name: "tid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btvarstrequalimage",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteacat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "byteacmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "byteaeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteage",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteagt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteain",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "byteale",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bytealike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bytealt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteane",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteanlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteaout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "byteasend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "cardinality",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "cash_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "cash_div_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cash_div_flt4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_flt8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_flt4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_flt8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "cash_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "cash_words",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "cashlarger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cashsmaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cbrt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ceil",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ceil",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "ceiling",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ceiling",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "char",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "char"},
	},
	{
		Name: "char",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "char"},
	},
	{
		Name: "char_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "char_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "character_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "character_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "chareq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "charge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "chargt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "charin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "char"},
	},
	{
		Name: "charle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "charlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "charne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "charout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "charsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "chr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "cideq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cid"},
			},
			{
				Type: &ast.TypeName{Name: "cid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cidin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cid"},
	},
	{
		Name: "cidout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "cidr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cidr"},
	},
	{
		Name: "cidr_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cidr"},
	},
	{
		Name: "cidr_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cidr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "cidr_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cidr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "cidsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "circle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle_above",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_add_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle_below",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "circle_contain",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_contain_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_contained",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_distance",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "circle_div_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_left",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_mul_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name: "circle_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "circle_overabove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_overbelow",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_overlap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_overleft",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_overright",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_right",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_same",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "circle_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "circle_sub_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "circle"},
	},
	{
		Name:       "clock_timestamp",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "close_ls",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "close_lseg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "close_pb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "close_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "close_ps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "close_sb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "col_description",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "concat_ws",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "convert",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "convert_from",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "convert_to",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "corr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cos",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cosd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cosh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cot",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cotd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name:       "count",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "count",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "covar_pop",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "covar_samp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cstring_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "cstring_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "cstring_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name:       "cume_dist",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cume_dist",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name:       "current_database",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name:       "current_query",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "current_schema",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "current_schemas",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name[]"},
	},
	{
		Name: "current_setting",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "current_setting",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "current_user",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "currtid2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "tid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tid"},
	},
	{
		Name: "currval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "cursor_to_xml",
		Args: []*catalog.Argument{
			{
				Name: "cursor",
				Type: &ast.TypeName{Name: "refcursor"},
			},
			{
				Name: "count",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "nulls",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "tableforest",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "targetns",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xml"},
	},
	{
		Name: "cursor_to_xmlschema",
		Args: []*catalog.Argument{
			{
				Name: "cursor",
				Type: &ast.TypeName{Name: "refcursor"},
			},
			{
				Name: "nulls",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "tableforest",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "targetns",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xml"},
	},
	{
		Name: "database_to_xml",
		Args: []*catalog.Argument{
			{
				Name: "nulls",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "tableforest",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "targetns",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xml"},
	},
	{
		Name: "database_to_xml_and_xmlschema",
		Args: []*catalog.Argument{
			{
				Name: "nulls",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "tableforest",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "targetns",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xml"},
	},
	{
		Name: "database_to_xmlschema",
		Args: []*catalog.Argument{
			{
				Name: "nulls",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "tableforest",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "targetns",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xml"},
	},
	{
		Name: "date",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date_bin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "date_bin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "date_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "date_cmp_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "date_cmp_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "date_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_eq_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_eq_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_ge_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_ge_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_gt_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_gt_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_le_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_le_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_lt_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_lt_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "date_mi_interval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "date_mii",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_ne_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_ne_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "date_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "date_part",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "date_part",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "date_part",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "date_part",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "date_part",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "date_part",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "date_pl_interval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "date_pli",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "date_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "date_trunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "date_trunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "date_trunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "date_trunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name:       "datemultirange",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "datemultirange"},
	},
	{
		Name: "datemultirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "daterange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "datemultirange"},
	},
	{
		Name: "datemultirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "daterange[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "datemultirange"},
	},
	{
		Name: "daterange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "daterange"},
	},
	{
		Name: "daterange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "daterange"},
	},
	{
		Name: "daterange_canonical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "daterange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "daterange"},
	},
	{
		Name: "daterange_subdiff",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "datetime_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "datetimetz_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "dcbrt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "decode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "degrees",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name:       "dense_rank",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "dense_rank",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "dexp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "diagonal",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "lseg"},
	},
	{
		Name: "diameter",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_bp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_bs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_cpoint",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_cpoly",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_lp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_ls",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_pathp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_pb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_pc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_polyc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_polyp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_ppath",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_ppoly",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_ps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_sb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_sl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dist_sp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "dlog1",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dlog10",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "domain_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "any"},
	},
	{
		Name: "dpow",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dround",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dsqrt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "dtrunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "elem_contained_by_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "elem_contained_by_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "encode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "enum_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "enum_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "enum_first",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "enum_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "enum_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "enum_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "enum_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "enum_last",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "enum_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "enum_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "enum_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "enum_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "enum_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "enum_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "enum_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "enum_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "event_trigger_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "event_trigger"},
	},
	{
		Name: "event_trigger_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "event_trigger"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "every",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "exp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "exp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "extract",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "extract",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "extract",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "extract",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "extract",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "extract",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "factorial",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "family",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "fdw_handler_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "fdw_handler"},
	},
	{
		Name: "fdw_handler_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "fdw_handler"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "first_value",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "float4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float48div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float48eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float48ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float48gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float48le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float48lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float48mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float48mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float48ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float48pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float4_accum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision[]"},
	},
	{
		Name: "float4abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float4ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float4gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float4in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float4lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float4mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float4out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "float4pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "float4smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4um",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float4up",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float84div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float84eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float84ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float84gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float84le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float84lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float84mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float84mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float84ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float84pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_accum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision[]"},
	},
	{
		Name: "float8_avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_combine",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision[]"},
	},
	{
		Name: "float8_corr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_covar_pop",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_covar_samp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_accum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision[]"},
	},
	{
		Name: "float8_regr_avgx",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_avgy",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_combine",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision[]"},
	},
	{
		Name: "float8_regr_intercept",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_r2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_slope",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_sxx",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_sxy",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_regr_syy",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_stddev_pop",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_stddev_samp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_var_pop",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8_var_samp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float8ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float8gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float8in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float8lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float8mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "float8out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "float8pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "float8smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8um",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "float8up",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "floor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "floor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "flt4_mul_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "flt8_mul_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "fmgr_c_validator",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "fmgr_internal_validator",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "fmgr_sql_validator",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "format",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "format",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "format_type",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "gcd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "gcd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "gcd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name:       "gen_random_uuid",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "uuid"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "generate_series",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "generate_subscripts",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "generate_subscripts",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "get_bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "get_bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "get_byte",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "get_current_ts_config",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "regconfig"},
	},
	{
		Name:       "getdatabaseencoding",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name:       "getpgusername",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "gin_clean_pending_list",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "gin_cmp_tslexeme",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "gin_compare_jsonb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "gtsvectorin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "gtsvector"},
	},
	{
		Name: "gtsvectorout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "gtsvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "has_any_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_any_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_any_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_any_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_any_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_any_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_column_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_database_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_database_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_database_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_database_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_database_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_database_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_foreign_data_wrapper_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_foreign_data_wrapper_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_foreign_data_wrapper_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_foreign_data_wrapper_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_foreign_data_wrapper_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_foreign_data_wrapper_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_function_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_function_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_function_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_function_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_function_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_function_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_language_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_language_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_language_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_language_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_language_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_language_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_parameter_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_parameter_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_parameter_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_schema_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_schema_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_schema_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_schema_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_schema_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_schema_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_sequence_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_sequence_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_sequence_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_sequence_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_sequence_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_sequence_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_server_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_server_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_server_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_server_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_server_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_server_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_table_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_table_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_table_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_table_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_table_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_table_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_tablespace_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_tablespace_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_tablespace_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_tablespace_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_tablespace_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_tablespace_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_type_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_type_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_type_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_type_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_type_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "has_type_privilege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "hash_aclitem",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hash_aclitem_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hash_array",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hash_array_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hash_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hash_multirange_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hash_numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hash_numeric_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hash_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hash_range_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hash_record",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "record"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hash_record_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "record"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashbpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashbpcharextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashcharextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashenum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashenumextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashfloat4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashfloat4extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashfloat8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashfloat8extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashinet",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashinetextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashint2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashint2extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashint4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashint4extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashint8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashint8extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashmacaddr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashmacaddr8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashmacaddr8extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashmacaddrextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashname",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashnameextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashoid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashoidextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashoidvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashoidvectorextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashtext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashtextextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "hashtid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "hashtidextended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tid"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "height",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "host",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "hostmask",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "in_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "index_am_handler_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "index_am_handler"},
	},
	{
		Name: "index_am_handler_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "index_am_handler"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name:       "inet_client_addr",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name:       "inet_client_port",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "inet_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "inet_merge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cidr"},
	},
	{
		Name: "inet_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "inet_same_family",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "inet_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name:       "inet_server_addr",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name:       "inet_server_port",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "inetand",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "inetmi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "inetmi_int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "inetnot",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "inetor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "inetpl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "initcap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int24div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int24eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int24ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int24gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int24le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int24lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int24mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int24mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int24ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int24pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int28div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int28eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int28ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int28gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int28le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int28lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int28mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int28mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int28ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int28pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int2_avg_accum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint[]"},
	},
	{
		Name: "int2_avg_accum_inv",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint[]"},
	},
	{
		Name: "int2_mul_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "int2_sum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int2abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int2ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int2gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int2in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2int4_sum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int2larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int2lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int2mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int2not",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "int2pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "int2shl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2shr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2um",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2up",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int2vectorin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int2vector"},
	},
	{
		Name: "int2vectorout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int2vector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "int2vectorsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int2vector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "int2xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int42div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int42eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int42ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int42gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int42le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int42lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int42mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int42mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int42ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int42pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int48div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int48eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int48ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int48gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int48le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int48lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int48mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int48mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int48ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int48pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int4_avg_accum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint[]"},
	},
	{
		Name: "int4_avg_accum_inv",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint[]"},
	},
	{
		Name: "int4_avg_combine",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint[]"},
	},
	{
		Name: "int4_mul_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "int4_sum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int4abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int4ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int4gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int4in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4inc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int4lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int4mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "int4multirange",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "int4multirange"},
	},
	{
		Name: "int4multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int4range"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int4multirange"},
	},
	{
		Name: "int4multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int4range[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "int4multirange"},
	},
	{
		Name: "int4ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int4not",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "int4pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int4range"},
	},
	{
		Name: "int4range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int4range"},
	},
	{
		Name: "int4range_canonical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int4range"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int4range"},
	},
	{
		Name: "int4range_subdiff",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "int4send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "int4shl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4shr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4um",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4up",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int4xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int82div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int82eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int82ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int82gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int82le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int82lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int82mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int82mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int82ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int82pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int84div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int84eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int84ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int84gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int84le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int84lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int84mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int84mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int84ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int84pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8_avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "int8_mul_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "int8_sum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "int8abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8dec",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8dec_any",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int8ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int8gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int8in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8inc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8inc_any",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8inc_float8_float8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int8lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int8mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name:       "int8multirange",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "int8multirange"},
	},
	{
		Name: "int8multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int8range"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int8multirange"},
	},
	{
		Name: "int8multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int8range[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "int8multirange"},
	},
	{
		Name: "int8ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "int8not",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "int8pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8pl_inet",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "int8range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int8range"},
	},
	{
		Name: "int8range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int8range"},
	},
	{
		Name: "int8range_canonical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "int8range"},
			},
		},
		ReturnType: &ast.TypeName{Name: "int8range"},
	},
	{
		Name: "int8range_subdiff",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "int8send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "int8shl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8shr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8um",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8up",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "int8xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "integer_pl_date",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "inter_lb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "inter_sb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "inter_sl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_accum",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval[]"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval[]"},
	},
	{
		Name: "interval_accum_inv",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval[]"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval[]"},
	},
	{
		Name: "interval_avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "interval_combine",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval[]"},
			},
			{
				Type: &ast.TypeName{Name: "interval[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval[]"},
	},
	{
		Name: "interval_div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval_hash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "interval_hash_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "interval_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval_mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "interval_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "interval_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_pl_date",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "interval_pl_time",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time without time zone"},
	},
	{
		Name: "interval_pl_timestamp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "interval_pl_timestamptz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "interval_pl_timetz",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time with time zone"},
	},
	{
		Name: "interval_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "interval_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "interval_um",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "intervaltypmodin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "intervaltypmodout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "is_normalized",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isclosed",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isempty",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isempty",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isfinite",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isfinite",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isfinite",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isfinite",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ishorizontal",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ishorizontal",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ishorizontal",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isopen",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isparallel",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isparallel",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isperp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isperp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isvertical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isvertical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "isvertical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "json_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_array_element",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name: "element_index",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_array_element_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name: "element_index",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "json_array_elements",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_array_elements_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "json_array_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "json_build_array",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_build_array",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name:       "json_build_object",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_build_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_each",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "json_each_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "json_extract_path",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name: "path_elems",
				Type: &ast.TypeName{Name: "text[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_extract_path_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name: "path_elems",
				Type: &ast.TypeName{Name: "text[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "json_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_object_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_object_field",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name: "field_name",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_object_field_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name: "field_name",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "json_object_keys",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "json_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "json_populate_record",
		Args: []*catalog.Argument{
			{
				Name: "base",
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name:       "use_json_as_text",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "json_populate_recordset",
		Args: []*catalog.Argument{
			{
				Name: "base",
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Name:       "use_json_as_text",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "json_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "json_strip_nulls",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "json_to_record",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "json_to_recordset",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "json_to_tsvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tsvector"},
	},
	{
		Name: "json_to_tsvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regconfig"},
			},
			{
				Type: &ast.TypeName{Name: "json"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tsvector"},
	},
	{
		Name: "json_typeof",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "json"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_array_element",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "element_index",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_array_element_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "element_index",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_array_elements",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_array_elements_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_array_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "jsonb_build_array",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_build_array",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name:       "jsonb_build_object",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_build_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "jsonb_concat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_contained",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_contains",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_delete",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_delete",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_delete",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path_elems",
				Type: &ast.TypeName{Name: "text[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_delete_path",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_each",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "jsonb_each_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "jsonb_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_exists",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_exists_all",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_exists_any",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_extract_path",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path_elems",
				Type: &ast.TypeName{Name: "text[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_extract_path_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path_elems",
				Type: &ast.TypeName{Name: "text[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_hash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "jsonb_hash_extended",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "jsonb_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_insert",
		Args: []*catalog.Argument{
			{
				Name: "jsonb_in",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Name: "replacement",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "insert_after",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_object_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_object_field",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "field_name",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_object_field_text",
		Args: []*catalog.Argument{
			{
				Name: "from_json",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "field_name",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_object_keys",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "jsonb_path_exists",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_path_exists_opr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonpath"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_path_exists_tz",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_path_match",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_path_match_opr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonpath"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_path_match_tz",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "jsonb_path_query",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_path_query_array",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_path_query_array_tz",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_path_query_first",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_path_query_first_tz",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_path_query_tz",
		Args: []*catalog.Argument{
			{
				Name: "target",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "jsonpath"},
			},
			{
				Name:       "vars",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "silent",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_populate_record",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "jsonb_populate_recordset",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "jsonb_pretty",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonb_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "jsonb_set",
		Args: []*catalog.Argument{
			{
				Name: "jsonb_in",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Name: "replacement",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "create_if_missing",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_set_lax",
		Args: []*catalog.Argument{
			{
				Name: "jsonb_in",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name: "path",
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Name: "replacement",
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Name:       "create_if_missing",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
			{
				Name:       "null_value_treatment",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_strip_nulls",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonb"},
	},
	{
		Name: "jsonb_to_record",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "jsonb_to_recordset",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "jsonb_to_tsvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tsvector"},
	},
	{
		Name: "jsonb_to_tsvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regconfig"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tsvector"},
	},
	{
		Name: "jsonb_typeof",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "jsonpath_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "jsonpath"},
	},
	{
		Name: "jsonpath_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonpath"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "jsonpath_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonpath"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "justify_days",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "justify_hours",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "justify_interval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "lag",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatible"},
	},
	{
		Name: "lag",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "lag",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "language_handler_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "language_handler"},
	},
	{
		Name: "language_handler_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "language_handler"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "last_value",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name:       "lastval",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "lcm",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "lcm",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lcm",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "lead",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatible"},
	},
	{
		Name: "lead",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "lead",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "left",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tsvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "like",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "like",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "like",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "like_escape",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "like_escape",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "line",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "line"},
	},
	{
		Name: "line_distance",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "line_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "line_horizontal",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "line_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "line"},
	},
	{
		Name: "line_interpt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "line_intersect",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "line_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "line_parallel",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "line_perp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "line_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "line_vertical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ln",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ln",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "lo_close",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_creat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "lo_create",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "lo_export",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_from_bytea",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "lo_get",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "lo_get",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "lo_import",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "lo_import",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "lo_lseek",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_lseek64",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "lo_open",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_put",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "lo_tell",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_tell64",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "lo_truncate",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_truncate64",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lo_unlink",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "log",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "log",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "log",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "log10",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "log10",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "loread",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "lower",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "lower",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "lower",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "lower_inc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lower_inc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lower_inf",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lower_inf",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lowrite",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "lpad",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "lpad",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "lseg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "lseg"},
	},
	{
		Name: "lseg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "lseg"},
	},
	{
		Name: "lseg_center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "lseg_distance",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "lseg_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_horizontal",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "lseg"},
	},
	{
		Name: "lseg_interpt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "lseg_intersect",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "lseg_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "lseg_parallel",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_perp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "lseg_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "lseg_vertical",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ltrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "ltrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "ltrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "macaddr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr"},
	},
	{
		Name: "macaddr8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr8"},
	},
	{
		Name: "macaddr8_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr8"},
	},
	{
		Name: "macaddr8_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "macaddr8_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr8_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr8_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr8_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr8"},
	},
	{
		Name: "macaddr8_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr8_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr8_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr8_not",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr8"},
	},
	{
		Name: "macaddr8_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr8"},
	},
	{
		Name: "macaddr8_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "macaddr8_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "macaddr8_set7bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr8"},
	},
	{
		Name: "macaddr_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr"},
	},
	{
		Name: "macaddr_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "macaddr_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr"},
	},
	{
		Name: "macaddr_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "macaddr_not",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr"},
	},
	{
		Name: "macaddr_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "macaddr"},
	},
	{
		Name: "macaddr_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "macaddr_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "macaddr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "make_date",
		Args: []*catalog.Argument{
			{
				Name: "year",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "month",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "day",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "make_interval",
		Args: []*catalog.Argument{
			{
				Name:       "years",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "integer"},
			},
			{
				Name:       "months",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "integer"},
			},
			{
				Name:       "weeks",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "integer"},
			},
			{
				Name:       "days",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "integer"},
			},
			{
				Name:       "hours",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "integer"},
			},
			{
				Name:       "mins",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "integer"},
			},
			{
				Name:       "secs",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "make_time",
		Args: []*catalog.Argument{
			{
				Name: "hour",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "min",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "sec",
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time without time zone"},
	},
	{
		Name: "make_timestamp",
		Args: []*catalog.Argument{
			{
				Name: "year",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "month",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "mday",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "hour",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "min",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "sec",
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "make_timestamptz",
		Args: []*catalog.Argument{
			{
				Name: "year",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "month",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "mday",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "hour",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "min",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "sec",
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "make_timestamptz",
		Args: []*catalog.Argument{
			{
				Name: "year",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "month",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "mday",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "hour",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "min",
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Name: "sec",
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Name: "timezone",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "makeaclitem",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem"},
	},
	{
		Name: "masklen",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_lsn"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tid"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time with time zone"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time without time zone"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "max",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "xid8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xid8"},
	},
	{
		Name: "md5",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "md5",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "date"},
			},
		},
		ReturnType: &ast.TypeName{Name: "date"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_lsn"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tid"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time with time zone"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "time without time zone"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "timestamp without time zone"},
	},
	{
		Name: "min",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "xid8"},
			},
		},
		ReturnType: &ast.TypeName{Name: "xid8"},
	},
	{
		Name: "min_scale",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name:       "mode",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "money",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "money",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "money",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "mul_d_interval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "multirange_adjacent_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_adjacent_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_after_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_after_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_before_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_before_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "multirange_contained_by_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_contained_by_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_contains_elem",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_contains_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_contains_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "multirange_intersect",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "multirange_intersect_agg_transfn",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "multirange_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_minus",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "multirange_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "multirange_overlaps_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_overlaps_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_overleft_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_overleft_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_overright_multirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_overright_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "multirange_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "multirange_union",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "mxid_age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "xid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "name",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "name",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character varying"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "name",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "nameconcatoid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "nameeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameeqtext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namege",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namegetext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namegt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namegttext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameiclike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameicnlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameicregexeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameicregexne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namein",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "namele",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameletext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namelike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namelt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namelttext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namene",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namenetext",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namenlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "nameregexeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nameregexne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "namesend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "netmask",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "network",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cidr"},
	},
	{
		Name: "network_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "network_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "network_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_overlap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "network_sub",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_subeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_sup",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "network_supeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "nextval",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "normalize",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "notlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "notlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "notlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "now",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name: "npoints",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "npoints",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "nth_value",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "ntile",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "num_nonnulls",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "num_nulls",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_add",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "numeric_div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_div_trunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "numeric_exp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "numeric_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "numeric_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_inc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "numeric_ln",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_log",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "numeric_mod",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "numeric_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "numeric_pl_pg_lsn",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "pg_lsn"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name: "numeric_power",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "numeric_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_sqrt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_sub",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_uminus",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numeric_uplus",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "numerictypmodin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "numerictypmodout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name:       "nummultirange",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "nummultirange"},
	},
	{
		Name: "nummultirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "nummultirange"},
	},
	{
		Name: "nummultirange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numrange[]"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "nummultirange"},
	},
	{
		Name: "numnode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tsquery"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "numrange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numrange"},
	},
	{
		Name: "numrange",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numrange"},
	},
	{
		Name: "numrange_subdiff",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "obj_description",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "obj_description",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "octet_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "octet_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "octet_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "octet_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "oideq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidgt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "oidlarger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "oidle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "oidsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "oidsmaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name: "oidvectoreq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidvectorge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidvectorgt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidvectorin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "oidvector"},
	},
	{
		Name: "oidvectorle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidvectorlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidvectorne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "oidvectorout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "oidvectorsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "oidvectortypes",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "on_pb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "on_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "on_ppath",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "on_ps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "on_sb",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "on_sl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "lseg"},
			},
			{
				Type: &ast.TypeName{Name: "line"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "time without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlaps",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "overlay",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "overlay",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "overlay",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "overlay",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "overlay",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "overlay",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "parse_ident",
		Args: []*catalog.Argument{
			{
				Name: "str",
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Name:       "strict",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text[]"},
	},
	{
		Name: "path",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "path_add",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "path_add_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "path_contain_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_distance",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "path_div_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "path_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "path_inter",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "path_mul_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "path_n_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_n_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_n_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_n_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_n_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "path_npoints",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "path_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "path_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "path_sub_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name: "pclose",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "path"},
	},
	{
		Name:       "percent_rank",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "percent_rank",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
				Mode: ast.FuncParamVariadic,
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "percentile_cont",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "percentile_cont",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision[]"},
	},
	{
		Name: "percentile_cont",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "percentile_cont",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval[]"},
	},
	{
		Name: "percentile_disc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "percentile_disc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "pg_advisory_lock",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_lock",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_lock_shared",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_lock_shared",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_unlock",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_advisory_unlock",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "pg_advisory_unlock_all",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_unlock_shared",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_advisory_unlock_shared",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_advisory_xact_lock",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_xact_lock",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_xact_lock_shared",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_advisory_xact_lock_shared",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name:       "pg_available_extension_versions",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_available_extensions",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_backend_pid",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "pg_backup_start",
		Args: []*catalog.Argument{
			{
				Name: "label",
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Name:       "fast",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name: "pg_backup_stop",
		Args: []*catalog.Argument{
			{
				Name:       "wait_for_archive",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_blocking_pids",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer[]"},
	},
	{
		Name: "pg_cancel_backend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_char_to_encoding",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "pg_client_encoding",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "pg_collation_actual_version",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_collation_for",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_collation_is_visible",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_column_compression",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_column_is_updatable",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_column_size",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "pg_conf_load_time",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name:       "pg_config",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_control_checkpoint",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_control_init",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_control_recovery",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_control_system",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_conversion_is_visible",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_copy_logical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "src_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "dst_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_copy_logical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "src_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "dst_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "temporary",
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_copy_logical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "src_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "dst_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "temporary",
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Name: "plugin",
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_copy_physical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "src_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "dst_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_copy_physical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "src_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "dst_slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "temporary",
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_create_logical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name: "plugin",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name:       "temporary",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
			{
				Name:       "twophase",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_create_physical_replication_slot",
		Args: []*catalog.Argument{
			{
				Name: "slot_name",
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Name:       "immediately_reserve",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
			{
				Name:       "temporary",
				HasDefault: true,
				Type:       &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_create_restore_point",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name:       "pg_current_logfile",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_current_logfile",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "pg_current_snapshot",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "pg_snapshot"},
	},
	{
		Name:       "pg_current_wal_flush_lsn",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name:       "pg_current_wal_insert_lsn",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name:       "pg_current_wal_lsn",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name:       "pg_current_xact_id",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "xid8"},
	},
	{
		Name:       "pg_current_xact_id_if_assigned",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "xid8"},
	},
	{
		Name:       "pg_cursor",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_database_collation_actual_version",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_database_size",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "pg_database_size",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "pg_ddl_command_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_ddl_command"},
	},
	{
		Name: "pg_ddl_command_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_ddl_command"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "pg_ddl_command_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_ddl_command"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "pg_dependencies_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_dependencies"},
	},
	{
		Name: "pg_dependencies_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_dependencies"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "pg_dependencies_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_dependencies"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "pg_describe_object",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_drop_replication_slot",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_encoding_max_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "pg_encoding_to_char",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name:       "pg_event_trigger_ddl_commands",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_event_trigger_dropped_objects",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_event_trigger_table_rewrite_oid",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "oid"},
	},
	{
		Name:       "pg_event_trigger_table_rewrite_reason",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name:       "pg_export_snapshot",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_extension_config_dump",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "pg_extension_update_paths",
		Args: []*catalog.Argument{
			{
				Name: "name",
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_filenode_relation",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "regclass"},
	},
	{
		Name: "pg_function_is_visible",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "pg_get_backend_memory_contexts",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_get_catalog_foreign_keys",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_constraintdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_constraintdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_expr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_node_tree"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_expr",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_node_tree"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_function_arg_default",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_function_arguments",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_function_identity_arguments",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_function_result",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_function_sqlbody",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_functiondef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_indexdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_indexdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "pg_get_keywords",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_multixact_members",
		Args: []*catalog.Argument{
			{
				Name: "multixid",
				Type: &ast.TypeName{Name: "xid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_object_address",
		Args: []*catalog.Argument{
			{
				Name: "type",
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Name: "object_names",
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Name: "object_args",
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_partition_constraintdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_partkeydef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_publication_tables",
		Args: []*catalog.Argument{
			{
				Name: "pubname",
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_replica_identity_index",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "regclass"},
	},
	{
		Name:       "pg_get_replication_slots",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_ruledef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_ruledef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_serial_sequence",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "pg_get_shmem_allocations",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_get_statisticsobjdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_statisticsobjdef_columns",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_statisticsobjdef_expressions",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text[]"},
	},
	{
		Name: "pg_get_triggerdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_triggerdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_userbyid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "name"},
	},
	{
		Name: "pg_get_viewdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_viewdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_viewdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_viewdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_get_viewdef",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "pg_get_wal_replay_pause_state",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name:       "pg_get_wal_resource_managers",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_has_role",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_has_role",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_has_role",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_has_role",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_has_role",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_has_role",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "pg_hba_file_rules",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_ident_file_mappings",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_identify_object",
		Args: []*catalog.Argument{
			{
				Name: "classid",
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Name: "objid",
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Name: "objsubid",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_identify_object_as_address",
		Args: []*catalog.Argument{
			{
				Name: "classid",
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Name: "objid",
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Name: "objsubid",
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "pg_import_system_collations",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regnamespace"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "pg_index_column_has_property",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_index_has_property",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_indexam_has_property",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_indexam_progress_phasename",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "pg_indexes_size",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name:       "pg_is_in_recovery",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_is_other_temp_schema",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "pg_is_wal_replay_paused",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "pg_isolation_test_session_is_blocked",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "pg_jit_available",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name:       "pg_last_committed_xact",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name:       "pg_last_wal_receive_lsn",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name:       "pg_last_wal_replay_lsn",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "pg_lsn"},
	},
	{
		Name:       "pg_last_xact_replay_timestamp",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "timestamp with time zone"},
	},
	{
		Name:       "pg_listening_channels",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "text"},
	},