
// Code generated by sqlc-pg-gen. DO NOT EDIT.

package postgresql

import (
	"github.com/kyleconroy/sqlc/internal/sql/ast"
	"github.com/kyleconroy/sqlc/internal/sql/catalog"
)

var funcsgenPGCatalog = []*catalog.Function{
	{
		Name:       "RI_FKey_cascade_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_cascade_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_check_ins",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_check_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_noaction_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_noaction_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_restrict_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_restrict_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setdefault_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setdefault_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setnull_del",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name:       "RI_FKey_setnull_upd",
		Args:       []*catalog.Argument{},
		ReturnType: &ast.TypeName{Name: "trigger"},
	},
	{
		Name: "abbrev",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cidr"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "abbrev",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "real"},
	},
	{
		Name: "abs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "aclcontains",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "acldefault",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem[]"},
	},
	{
		Name: "aclexplode",
		Args: []*catalog.Argument{
			{
				Name: "acl",
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "record"},
	},
	{
		Name: "aclinsert",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem[]"},
	},
	{
		Name: "aclitemeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "aclitemin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem"},
	},
	{
		Name: "aclitemout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "aclremove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "aclitem[]"},
			},
			{
				Type: &ast.TypeName{Name: "aclitem"},
			},
		},
		ReturnType: &ast.TypeName{Name: "aclitem[]"},
	},
	{
		Name: "acos",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "acosd",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "acosh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "xid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp with time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "age",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
			{
				Type: &ast.TypeName{Name: "timestamp without time zone"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "amvalidate",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "any_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "any"},
	},
	{
		Name: "any_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "any"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyarray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "anyarray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyarray_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "anycompatible_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatible"},
	},
	{
		Name: "anycompatible_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblearray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "anycompatiblearray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblearray_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "anycompatiblemultirange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblemultirange"},
	},
	{
		Name: "anycompatiblemultirange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblemultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblenonarray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblenonarray"},
	},
	{
		Name: "anycompatiblenonarray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblenonarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anycompatiblerange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblerange"},
	},
	{
		Name: "anycompatiblerange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblerange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyelement_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyelement"},
	},
	{
		Name: "anyelement_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyenum_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyenum"},
	},
	{
		Name: "anyenum_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyenum"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anymultirange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anymultirange"},
	},
	{
		Name: "anymultirange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anymultirange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anynonarray_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anynonarray"},
	},
	{
		Name: "anynonarray_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anynonarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anyrange_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyrange"},
	},
	{
		Name: "anyrange_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyrange"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "anytextcat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anynonarray"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "area",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "area",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "area",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "path"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "array_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_agg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anynonarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_append",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_cat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_dims",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "array_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_fill",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_fill",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyelement"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
			{
				Type: &ast.TypeName{Name: "integer[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_lower",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_ndims",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "array_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "array_position",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_position",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "array_positions",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer[]"},
	},
	{
		Name: "array_prepend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_remove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_replace",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anycompatiblearray"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
			{
				Type: &ast.TypeName{Name: "anycompatible"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anycompatiblearray"},
	},
	{
		Name: "array_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "array_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "anyarray"},
	},
	{
		Name: "array_to_json",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "array_to_json",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "json"},
	},
	{
		Name: "array_to_string",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "array_to_string",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "array_to_tsvector",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "tsvector"},
	},
	{
		Name: "array_upper",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "arraycontained",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "arraycontains",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "arrayoverlap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "ascii",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "asin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "asind",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "asinh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atan",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atan2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atan2d",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atand",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "atanh",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "interval"},
			},
		},
		ReturnType: &ast.TypeName{Name: "interval"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "avg",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "binary_upgrade_create_empty_extension",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "oid[]"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
			{
				Type: &ast.TypeName{Name: "text[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_missing_value",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_array_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_heap_pg_class_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_heap_relfilenode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_index_pg_class_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_index_relfilenode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_multirange_array_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_multirange_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_authid_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_enum_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_tablespace_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_pg_type_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_toast_pg_class_oid",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_next_toast_relfilenode",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "binary_upgrade_set_record_init_privs",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "bit_count",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_count",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "bit_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "bit_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bigint"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bit_xor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "smallint"},
	},
	{
		Name: "bitand",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitcat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit varying"},
			},
			{
				Type: &ast.TypeName{Name: "bit varying"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit varying"},
	},
	{
		Name: "bitcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "biteq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitgt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bitnot",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitshiftleft",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bitshiftright",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bittypmodin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bittypmodout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "bitxor",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bit"},
			},
			{
				Type: &ast.TypeName{Name: "bit"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bit"},
	},
	{
		Name: "bool",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bool",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "jsonb"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bool_and",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bool_or",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "booland_statefunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "booleq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolgt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boollt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolor_statefunc",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "boolout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "boolsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "bound_box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "point"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "polygon"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_above",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_above_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_add",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_below",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_below_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "box_contain",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_contain_pt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_contained",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_distance",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "box_div",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_intersect",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_left",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_mul",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "box_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "box_overabove",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overbelow",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overlap",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overleft",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_overright",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_right",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_same",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "box_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "box_sub",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
			{
				Type: &ast.TypeName{Name: "point"},
			},
		},
		ReturnType: &ast.TypeName{Name: "box"},
	},
	{
		Name: "bpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar_larger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpchar_pattern_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_pattern_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_pattern_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_pattern_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchar_smaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpcharcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bpchareq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchargt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpchariclike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharicnlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharicregexeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharicregexne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "character"},
	},
	{
		Name: "bpcharle",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharlt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharnlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "bpcharregexeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharregexne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bpcharsend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "bpchartypmodin",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring[]"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bpchartypmodout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "brin_bloom_summary_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_brin_bloom_summary"},
	},
	{
		Name: "brin_bloom_summary_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_bloom_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "brin_bloom_summary_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_bloom_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "brin_desummarize_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "void"},
	},
	{
		Name: "brin_minmax_multi_summary_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "pg_brin_minmax_multi_summary"},
	},
	{
		Name: "brin_minmax_multi_summary_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_minmax_multi_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "brin_minmax_multi_summary_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "pg_brin_minmax_multi_summary"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "brin_summarize_new_values",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "brin_summarize_range",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "regclass"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "broadcast",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "inet"},
			},
		},
		ReturnType: &ast.TypeName{Name: "inet"},
	},
	{
		Name: "btarraycmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btboolcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
			{
				Type: &ast.TypeName{Name: "boolean"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btbpchar_pattern_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btcharcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btequalimage",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "btfloat48cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btfloat4cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "real"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btfloat84cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btfloat8cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint24cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint28cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint2cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint42cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint48cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint4cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint82cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint84cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btint8cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btnamecmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btnametextcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "name"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btoidcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btoidvectorcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
			{
				Type: &ast.TypeName{Name: "oidvector"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btrecordcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "record"},
			},
			{
				Type: &ast.TypeName{Name: "record"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btrecordimagecmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "record"},
			},
			{
				Type: &ast.TypeName{Name: "record"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "btrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "btrim",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "bttext_pattern_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bttextcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bttextnamecmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
			{
				Type: &ast.TypeName{Name: "name"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "bttidcmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "tid"},
			},
			{
				Type: &ast.TypeName{Name: "tid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "btvarstrequalimage",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "oid"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteacat",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "byteacmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "byteaeq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteage",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteagt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteain",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "byteale",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bytealike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "bytealt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteane",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteanlike",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "byteaout",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "byteasend",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "bytea"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "cardinality",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "anyarray"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "cash_cmp",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "cash_div_cash",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "cash_div_flt4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_flt8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_div_int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_eq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_ge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_gt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_in",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "cstring"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_le",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_lt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_mi",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_flt4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "real"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_flt8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_int2",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "smallint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_int4",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_mul_int8",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "bigint"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_ne",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "cash_out",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "cstring"},
	},
	{
		Name: "cash_pl",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cash_send",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "bytea"},
	},
	{
		Name: "cash_words",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "text"},
	},
	{
		Name: "cashlarger",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cashsmaller",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "money"},
			},
			{
				Type: &ast.TypeName{Name: "money"},
			},
		},
		ReturnType: &ast.TypeName{Name: "money"},
	},
	{
		Name: "cbrt",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ceil",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ceil",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "ceiling",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "double precision"},
			},
		},
		ReturnType: &ast.TypeName{Name: "double precision"},
	},
	{
		Name: "ceiling",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "numeric"},
			},
		},
		ReturnType: &ast.TypeName{Name: "numeric"},
	},
	{
		Name: "center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "box"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "center",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "circle"},
			},
		},
		ReturnType: &ast.TypeName{Name: "point"},
	},
	{
		Name: "char",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "integer"},
			},
		},
		ReturnType: &ast.TypeName{Name: "char"},
	},
	{
		Name: "char",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "char"},
	},
	{
		Name: "char_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "char_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "character_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "character"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "character_length",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "text"},
			},
		},
		ReturnType: &ast.TypeName{Name: "integer"},
	},
	{
		Name: "chareq",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "charge",
		Args: []*catalog.Argument{
			{
				Type: &ast.TypeName{Name: "char"},
			},
			{
				Type: &ast.TypeName{Name: "char"},
			},
		},
		ReturnType: &ast.TypeName{Name: "boolean"},
	},
	{
		Name: "chargt",
		Args: []*catalog.Argument{
			{